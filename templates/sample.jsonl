{"instruction": "Please print this text with all vowels removed: \"{CorpusParagraph}\"", "code": "import re\nModifiedText = re.sub(r'[aeiouAEIOU]', '', CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "Please reverse the order of words in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(CorpusParagraph.split()[::-1])", "target": "{ModifiedText}"}
{"instruction": "Please encode this text in Base64: \"{CorpusParagraph}\"", "code": "import base64\nModifiedText = base64.b64encode(CorpusParagraph.encode('utf-8')).decode('utf-8')", "target": "{ModifiedText}"}
{"instruction": "Please duplicate every word in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join([word + ' ' + word for word in CorpusParagraph.split()])", "target": "{ModifiedText}"}
{"instruction": "Please convert this text to Pig Latin: \"{CorpusParagraph}\"", "code": "def to_pig_latin(sentence): return ' '.join([word[1:] + word[:1] + 'ay' if word[0] in 'aeiouAEIOU' else word for word in sentence.split()])\nModifiedText = to_pig_latin(CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "The words in this text are scrambled randomly, but the words themselves are not altered, and no punctuation marks have changed place. Please recover the original text: \"{CorpusParagraph}\"", "code": "import random\nwords = CorpusParagraph.split()\nrandom.seed(42) # Ensure reproducibility\nrandom.shuffle(words)\nModifiedText = ' '.join(words)", "target": "{CorpusParagraph}"}
{"instruction": "Convert this text to Morse Code: \"{CorpusParagraph}\"", "code": "def text_to_morse(text): morse_code_dict = {'A': '.-', 'B': '-...', 'C': '-.-.', 'D': '-..', 'E': '.', 'F': '..-.', 'G': '--.', 'H': '....', 'I': '..', 'J': '.---', 'K': '-.-', 'L': '.-..', 'M': '--', 'N': '-.', 'O': '---', 'P': '.--.', 'Q': '--.-', 'R': '.-.', 'S': '...', 'T': '-', 'U': '..-', 'V': '...-', 'W': '.--', 'X': '-..-', 'Y': '-.--', 'Z': '--..', '1': '.----', '2': '..---', '3': '...--', '4': '....-', '5': '.....', '6': '-....', '7': '--...', '8': '---..', '9': '----.', '0': '-----', ', ': '--..--', '.': '.-.-.-', '?': '..--..', '/': '-..-.', '-': '-....-', '(': '-.--.', ')': '-.--.-'}; return ' '.join(morse_code_dict[c] for c in text.upper() if c in morse_code_dict.keys())\nModifiedText = text_to_morse(CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "Transform this text into an acronym: \"{CorpusParagraph}\"", "code": "ModifiedText = ''.join(word[0].upper() for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Replace all instances of the word 'blue' with 'red' in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.replace('blue', 'red')", "target": "{ModifiedText}"}
{"instruction": "Invert the case of every character in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.swapcase()", "target": "{ModifiedText}"}
{"instruction": "Add HTML paragraph tags around this text: \"{CorpusParagraph}\"", "code": "ModifiedText = f'<p>{CorpusParagraph}</p>'", "target": "{ModifiedText}"}
{"instruction": "Please insert a hyphen between every character in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = '-'.join(list(CorpusParagraph))", "target": "{ModifiedText}"}
{"instruction": "Capitalize the first letter of each word in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.title()", "target": "{ModifiedText}"}
{"instruction": "Convert all numbers from digits to words in this text: \"{CorpusParagraph}\"", "code": "import inflect\np = inflect.engine()\nModifiedText = ' '.join([p.number_to_words(word) if word.isdigit() else word for word in CorpusParagraph.split()])", "target": "{ModifiedText}"}
{"instruction": "Extract the first sentence from this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.split('.')[0] + '.'", "target": "{ModifiedText}"}
{"instruction": "Replace all spaces with underscores in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.replace(' ', '_')", "target": "{ModifiedText}"}
{"instruction": "Convert this text to its ASCII values, separated by spaces: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(str(ord(char)) for char in CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "Wrap each word in this text with quotation marks: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join('\"' + word + '\"' for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Please insert a hyphen between every character in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = '-'.join(list(CorpusParagraph))", "target": "{ModifiedText}"}
{"instruction": "Capitalize the first letter of each word in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.title()", "target": "{ModifiedText}"}
{"instruction": "Convert all numbers from digits to words in this text: \"{CorpusParagraph}\"", "code": "import inflect\np = inflect.engine()\nModifiedText = ' '.join([p.number_to_words(word) if word.isdigit() else word for word in CorpusParagraph.split()])", "target": "{ModifiedText}"}
{"instruction": "Extract the first sentence from this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.split('.')[0] + '.'", "target": "{ModifiedText}"}
{"instruction": "Replace all spaces with underscores in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.replace(' ', '_')", "target": "{ModifiedText}"}
{"instruction": "Convert this text to its ASCII values, separated by spaces: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(str(ord(char)) for char in CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "Wrap each word in this text with quotation marks: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join('\"' + word + '\"' for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Please transform each word into its length in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(str(len(word)) for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Create a list of unique words in alphabetical order from this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(sorted(set(CorpusParagraph.split())))", "target": "{ModifiedText}"}
{"instruction": "Convert this text into hexadecimal values, separated by spaces: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(format(ord(char), 'x') for char in CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "Count the frequency of each character and return it as a dictionary: \"{CorpusParagraph}\"", "code": "from collections import Counter\nModifiedText = str(Counter(CorpusParagraph))", "target": "{ModifiedText}"}
{"instruction": "Find and return the longest word in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = max(CorpusParagraph.split(), key=len)", "target": "{ModifiedText}"}
{"instruction": "Replace every nth word with 'XXX' in this text (n=3): \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join('XXX' if (i+1) % 3 == 0 else word for i, word in enumerate(CorpusParagraph.split()))", "target": "{ModifiedText}"}
{"instruction": "Reverse the order of characters in each word of this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(word[::-1] for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Concatenate the first and last word of this text: \"{CorpusParagraph}\"", "code": "words = CorpusParagraph.split(); ModifiedText = words[0] + words[-1]", "target": "{ModifiedText}"}
{"instruction": "Create a CSV string from the words in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ','.join(CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Convert this text to a slug (hyphens instead of spaces, all lowercase): \"{CorpusParagraph}\"", "code": "ModifiedText = '-'.join(CorpusParagraph.lower().split())", "target": "{ModifiedText}"}
{"instruction": "Double every consonant and place an 'o' between them in this text: \"{CorpusParagraph}\"", "code": "import re\nModifiedText = re.sub(r'([bcdfghjklmnpqrstvwxyz])', r'\\1o\\1', CorpusParagraph, flags=re.IGNORECASE)", "target": "{ModifiedText}"}
{"instruction": "Remove words shorter than 4 letters from this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(word for word in CorpusParagraph.split() if len(word) >= 4)", "target": "{ModifiedText}"}
{"instruction": "Replace every instance of 'e' with '3' and 'a' with '4' in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.replace('e', '3').replace('a', '4')", "target": "{ModifiedText}"}
{"instruction": "Capitalize every vowel in this text: \"{CorpusParagraph}\"", "code": "import re\nModifiedText = re.sub(r'[aeiou]', lambda x: x.group().upper(), CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "Find and return the shortest word in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = min(CorpusParagraph.split(), key=len)", "target": "{ModifiedText}"}
{"instruction": "Highlight all instances of 'the' by wrapping them in asterisks in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.replace('the', '*the*')", "target": "{ModifiedText}"}
{"instruction": "Convert the first letter of each sentence to lowercase in this text: \"{CorpusParagraph}\"", "code": "import re\nModifiedText = re.sub(r'(?<=\\.\\s)(\\w)', lambda x: x.group().lower(), CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "Separate this text into a list of sentences: \"{CorpusParagraph}\"", "code": "ModifiedText = str(CorpusParagraph.split('. '))", "target": "{ModifiedText}"}
{"instruction": "Replace the first occurrence of 'is' with 'was' in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.replace('is', 'was', 1)", "target": "{ModifiedText}"}
{"instruction": "Remove the last word from this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(CorpusParagraph.split()[:-1])", "target": "{ModifiedText}"}
{"instruction": "Insert 'and' between every two words in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' and '.join(CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Encode this text by shifting each letter by 3 positions in the alphabet: \"{CorpusParagraph}\"", "code": "def shift_encode(text, shift): return ''.join(chr((ord(char) - 65 + shift) % 26 + 65) if 'A' <= char <= 'Z' else chr((ord(char) - 97 + shift) % 26 + 97) if 'a' <= char <= 'z' else char for char in text)\nModifiedText = shift_encode(CorpusParagraph, 3)", "target": "{ModifiedText}"}
{"instruction": "Convert this text into a list where each word is reversed: \"{CorpusParagraph}\"", "code": "ModifiedText = str([word[::-1] for word in CorpusParagraph.split()])", "target": "{ModifiedText}"}
{"instruction": "Prefix each word with its index in the sentence in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(f'{i+1}:{word}' for i, word in enumerate(CorpusParagraph.split()))", "target": "{ModifiedText}"}
{"instruction": "Convert this text into a format where each word starts with a capital letter, except prepositions (of, in, to, for, with, on, at, from, by, about): \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(word if word in ['of', 'in', 'to', 'for', 'with', 'on', 'at', 'from', 'by', 'about'] else word.capitalize() for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Surround every word with parentheses in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(f'({word})' for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Replace all instances of 'and' with '&', and 'or' with '|' in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.replace('and', '&').replace('or', '|')", "target": "{ModifiedText}"}
{"instruction": "Return the text with all letters sorted within each word: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(''.join(sorted(word)) for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Invert the order of sentences in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = '. '.join(CorpusParagraph.split('. ')[::-1])", "target": "{ModifiedText}"}
{"instruction": "Convert this text to all uppercase, except for vowels which should be lowercase: \"{CorpusParagraph}\"", "code": "ModifiedText = ''.join(char.upper() if char not in 'aeiouAEIOU' else char.lower() for char in CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "Create a dictionary where each word is a key and its value is the length of the word: \"{CorpusParagraph}\"", "code": "ModifiedText = str({word: len(word) for word in CorpusParagraph.split()})", "target": "{ModifiedText}"}
{"instruction": "Replace each letter with the next letter in the alphabet, wrapping 'z' to 'a', in this text: \"{CorpusParagraph}\"", "code": "def next_letter(s): return ''.join(chr((ord(char) - 97 + 1) % 26 + 97) if 'a' <= char <= 'z' else chr((ord(char) - 65 + 1) % 26 + 65) if 'A' <= char <= 'Z' else char for char in s)\nModifiedText = next_letter(CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "Convert every 'i' to 'I' only if it is not the first letter of a word in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(word[0] + word[1:].replace('i', 'I') if len(word) > 1 else word for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Concatenate the first half of this text with the second half reversed: \"{CorpusParagraph}\"", "code": "half = len(CorpusParagraph) // 2; ModifiedText = CorpusParagraph[:half] + CorpusParagraph[half:][::-1]", "target": "{ModifiedText}"}
{"instruction": "Split this text into a list of words, but only include those that contain the letter 'e': \"{CorpusParagraph}\"", "code": "ModifiedText = str([word for word in CorpusParagraph.split() if 'e' in word])", "target": "{ModifiedText}"}
{"instruction": "Convert the first character of each word to its ASCII value in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(str(ord(word[0])) for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Remove every third word from this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(word for i, word in enumerate(CorpusParagraph.split()) if (i + 1) % 3 != 0)", "target": "{ModifiedText}"}
{"instruction": "For each word in this text, replace letters with '*' except for the first and last letters: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(word[0] + '*' * (len(word) - 2) + word[-1] if len(word) > 2 else word for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Transform this text by moving the first letter of each word to the end: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(word[1:] + word[0] for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Intersperse the text with a specific character ('|') between each character: \"{CorpusParagraph}\"", "code": "ModifiedText = '|'.join(CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "Create a list from this text, including only words that are in uppercase: \"{CorpusParagraph}\"", "code": "ModifiedText = str([word for word in CorpusParagraph.split() if word.isupper()])", "target": "{ModifiedText}"}
{"instruction": "Reverse every word in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(word[::-1] for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Shift every letter in this text by one in the alphabet: \"{CorpusParagraph}\"", "code": "ModifiedText = ''.join(chr((ord(char) - 65 + 1) % 26 + 65) if char.isupper() else chr((ord(char) - 97 + 1) % 26 + 97) if char.islower() else char for char in CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "Replace every instance of 'a' with 'e', 'e' with 'i', 'i' with 'o', and 'o' with 'u' in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.replace('a', 'e').replace('e', 'i').replace('i', 'o').replace('o', 'u')", "target": "{ModifiedText}"}
{"instruction": "Double every consonant and place an 'o' between them in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ''.join(char + 'o' + char if char.lower() in 'bcdfghjklmnpqrstvwxyz' else char for char in CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "Convert every first letter of a word to uppercase in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(word.capitalize() for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Reverse the order of words in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(CorpusParagraph.split()[::-1])", "target": "{ModifiedText}"}
{"instruction": "Replace spaces with a hyphen in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.replace(' ', '-')", "target": "{ModifiedText}"}
{"instruction": "Insert the word 'very' before every adjective (words ending in 'ly') in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join('very ' + word if word.endswith('ly') else word for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Replace every third word with 'XYZ' in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join('XYZ' if (i + 1) % 3 == 0 else word for i, word in enumerate(CorpusParagraph.split()))", "target": "{ModifiedText}"}
{"instruction": "Remove every vowel from this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ''.join(char for char in CorpusParagraph if char.lower() not in 'aeiou')", "target": "{ModifiedText}"}
{"instruction": "Convert this text to an acronym: \"{CorpusParagraph}\"", "code": "ModifiedText = ''.join(word[0].upper() for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Replace each letter with its position in the alphabet in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(str(ord(char) - 96) for char in CorpusParagraph.lower() if char.isalpha())", "target": "{ModifiedText}"}
{"instruction": "Shift every letter in this text by two in the alphabet, wrapping around at 'z': \"{CorpusParagraph}\"", "code": "ModifiedText = ''.join(chr((ord(char) - 97 + 2) % 26 + 97) if char.islower() else chr((ord(char) - 65 + 2) % 26 + 65) if char.isupper() else char for char in CorpusParagraph)", "target": "{ModifiedText}"}
{"instruction": "Make every other word uppercase in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(word.upper() if i % 2 == 0 else word for i, word in enumerate(CorpusParagraph.split()))", "target": "{ModifiedText}"}
{"instruction": "Replace 'you' with 'thou' in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph.replace('you', 'thou')", "target": "{ModifiedText}"}
{"instruction": "Reverse the entire text: \"{CorpusParagraph}\"", "code": "ModifiedText = CorpusParagraph[::-1]", "target": "{ModifiedText}"}
{"instruction": "Capitalize every letter that follows a space in this text: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join(word[0].upper() + word[1:] for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
{"instruction": "Convert this text into a series of hashtags: \"{CorpusParagraph}\"", "code": "ModifiedText = ' '.join('#' + word for word in CorpusParagraph.split())", "target": "{ModifiedText}"}
